{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nrightMotor = Motor(Ports.PORT1, False)\nleftMotor = Motor(Ports.PORT6, True)\nstrafeMotor = Motor(Ports.PORT5, False)\nleftFly = Motor(Ports.PORT2, False)\nrightFly = Motor(Ports.PORT4, True)\nrollers = Motor(Ports.PORT8, False)\npneumatic_7 = Pneumatic(Ports.PORT7)\noptical_9 = Optical(Ports.PORT9)\ntouchled_10 = Touchled(Ports.PORT10)\ndistance_11 = Distance(Ports.PORT11)\ndistance_12 = Distance(Ports.PORT12)\n\n\n\n# generating and setting random seed\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    xaxis = brain_inertial.acceleration(XAXIS) * 1000\n    yaxis = brain_inertial.acceleration(YAXIS) * 1000\n    zaxis = brain_inertial.acceleration(ZAXIS) * 1000\n    systemTime = brain.timer.system() * 100\n    urandom.seed(int(xaxis + yaxis + zaxis + systemTime)) \n    \n# Initialize random seed \ninitializeRandomSeed()\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       VEX\n# \tCreated:\n# \tDescription:  VEXcode IQ Python Project\n# \n# ------------------------------------------\n\n# Library imports\nimport math\nfrom vex import *\n\n# Begin project code\nclass Intake:\n    toggle=False\n    def __init__(self):\n        self.intake = Motor(Ports.PORT8, True)\n        self.intake.set_stopping(HOLD)\n        self.speed = 0\n        #self.intake.set_stopping(HOLD)\n\n    def start_intake(self,speed_pct):\n        self.speed = speed_pct\n        self.intake.set_velocity(speed_pct,RPM)\n        self.intake.spin(FORWARD)\n\n    def stop_intake(self):\n        self.intake.stop()\n\n    def reverse_intake(self,speed_pct):\n        self.speed = speed_pct\n        self.intake.set_velocity(speed_pct,RPM)\n        self.intake.spin(REVERSE)\n\n    def set_speed(self,new_speed):\n        self.speed = new_speed\n        self.intake.set_velocity(self.speed,RPM)\n        self.intake.spin(FORWARD)\n\n    def get_speed(self):\n        return self.speed\n    \n\n        \n\n    \n\nclass Flywheel:\n    GEAR_RATIO = 20 # 20:1 gear ratio(flywheel spins 20 times for 1 motor rotation)\n\n    def __init__(self):\n        self.leftFly = Motor(Ports.PORT2, True)\n        self.rightFly = Motor(Ports.PORT4, False)\n        self.leftFly.set_stopping(COAST)\n        self.rightFly.set_stopping(COAST)\n        self.vel = 0 # Flywheel speed percantage\n\n    def start_wheel(self,speed):\n        '''Start the flywheel at a given speed'''\n        self.vel = speed\n\n        #spin the motor at the desired speed percentage\n        #since the flywheel spins 20 times faster, we control the motor accordingly\n        self.leftFly.set_velocity(speed,RPM)\n        self.rightFly.set_velocity(speed,RPM)\n\n        self.leftFly.spin(FORWARD)\n        self.rightFly.spin(FORWARD)\n\n    def stop_flywheel(self):\n        '''stops the flywheel motor'''\n        self.leftFly.stop()\n        self.rightFly.stop()\n    \n    def set_speed(self,new_speed):\n        '''set a new speed to flywheel motors'''\n        self.vel = new_speed\n        self.leftFly.set_velocity(new_speed,RPM)\n        self.rightFly.set_velocity(new_speed,RPM)\n    \n    def get_speed(self):\n\n        return self.vel\n\n    def calculate_flywheel_speed(self):\n        motorrpm = self.leftFly.velocity(RPM)\n        motorrmp2 = self.rightFly.velocity(RPM)\n        rpm = (motorrpm + motorrmp2)/2\n        flywheelRPM = rpm * self.GEAR_RATIO\n        return flywheelRPM\n    def flywheel_rpm(self):\n        motorrpm = self.leftFly.velocity(RPM)\n        motorrmp2 = self.rightFly.velocity(RPM)\n        rpm = (motorrpm + motorrmp2)/2\n        return rpm \n\nclass Robot:\n    # constants\n    WHEEL_DIAMETER = 2.5 # INCHES\n    ENCODER_TICKS_PER_REV = 960 # TICKS PER FULL REVOLUTION OF VEX IQ MOTORS\n    GEAR_RATIO = 0.5 # 1:2 GEAR RATIO FOR SPEED\n    WHEEL_CIRCUMFERENCE = math.pi * WHEEL_DIAMETER\n    DISTANCE_PER_TICK = WHEEL_CIRCUMFERENCE / (ENCODER_TICKS_PER_REV * GEAR_RATIO)\n    TRACK_WIDTH = 11\n    SDISTANCE_PER_TICK = WHEEL_CIRCUMFERENCE / ENCODER_TICKS_PER_REV\n\n    def __init__(self):\n        self.rightMotor = Motor(Ports.PORT1, True)\n        self.leftMotor = Motor(Ports.PORT6, False)\n        self.gyro_3 = Gyro(Ports.PORT3)\n        self.strafeMotor = Motor(Ports.PORT5, True)\n        self.strafeMotor.set_velocity(120,RPM)\n        self.flywheel = Flywheel()\n        self.intake  = Intake()\n\n        brain.screen.print(\"calibration start\")\n        brain.screen.next_row()\n        self.gyro_3.calibrate(GyroCalibrationType.NORMAL)\n        wait(2,SECONDS)\n        brain.screen.next_row()\n        brain.screen.print(\"calibration ended\")\n\n\n        #self.odometry = Odometry(self)\n\n    def set_drive_speed(self,speedL,speedR):\n        self.leftMotor.set_velocity(speedL,PERCENT)\n        self.rightMotor.set_velocity(speedR,PERCENT)\n\n    def driveF(self,sec):\n        self.leftMotor.spin(FORWARD)\n        self.rightMotor.spin(FORWARD)\n        self.strafeMotor.spin(FORWARD)\n        wait(sec,SECONDS)\n        self.leftMotor.stop()\n        self.rightMotor.stop()\n        self.strafeMotor.stop()\n\n    def driveR(self,sec):\n        self.leftMotor.spin(REVERSE)\n        self.rightMotor.spin(REVERSE)\n        self.strafeMotor.spin(REVERSE)\n        wait(sec,SECONDS)\n        self.leftMotor.stop()\n        self.rightMotor.stop()\n        self.strafeMotor.stop()\n\n  \n\n    def stop_D(self):\n        self.leftMotor.stop()\n        self.rightMotor.stop()\n        self.strafeMotor.stop()\n    def turnL(self,sec):\n        self.leftMotor.spin(REVERSE)\n        self.rightMotor.spin(FORWARD)\n        wait(sec,SECONDS)\n        self.leftMotor.stop()\n        self.rightMotor.stop()\n        self.strafeMotor.stop()\n\n    def turnR(self,sec):\n        self.leftMotor.spin(FORWARD)\n        self.rightMotor.spin(REVERSE)\n        wait(sec,SECONDS)\n        self.leftMotor.stop()\n        self.rightMotor.stop()\n        self.strafeMotor.stop()\n    def turnRINF(self):\n        self.leftMotor.spin(REVERSE)\n        self.rightMotor.spin(FORWARD)\n#-----------------------------------------------------------------------------------------\n#                                  FLYWHEEL IN ROBOT METHODS\n#-----------------------------------------------------------------------------------------\n    def start_flywheel(self,speed):\n        self.flywheel.start_wheel(speed)\n    def stop_flywheel(self):\n        self.flywheel.stop_flywheel()\n    def set_flywheel_speed(self,new_speed):\n        self.flywheel.set_speed(new_speed)\n    def get_flywheel_speed(self):\n        return self.flywheel.get_speed()\n    def get_flywheel_rpm(self):\n        return self.flywheel.calculate_flywheel_speed()\n    def flywheely_rpm(self):\n        return self.flywheel.flywheel_rpm()\n\n#-----------------------------------------------------------------------------------------\n#                                  INTAKE IN ROBOT METHODS\n#-----------------------------------------------------------------------------------------\n    def start_intake(self,speed_pct):\n        self.intake.start_intake(speed_pct)\n    \n    def stop_intake(self):\n        self.intake.stop_intake()\n    \n    def reverse_intake(self, speed_pct):\n        self.intake.reverse_intake(speed_pct)\n    def set_intake_speed(self,speed_pct):\n        self.intake.set_speed(speed_pct)\n    def get_intake_speed(self):\n        return self.intake.get_speed()\n    def shoot_ball(self):\n        pneumatic_7.retract(CYLINDER1)\n        pneumatic_7.retract(CYLINDER2)\n        wait(0.4,SECONDS)\n        pneumatic_7.extend(CYLINDER1)\n        pneumatic_7.extend(CYLINDER2)\n        \n\n\n\nbobby = Robot()\nbobby.set_drive_speed(100,100)\npneumatic_7.pump_on()\ntouchled_10.set_color(Color.RED)\n\n\nbrain_inertial.set_heading(5, DEGREES)\n\nwhile not touchled_10.pressing():\n    pass\ntouchled_10.set_color(Color.GREEN)\nbobby.start_flywheel(120)\nbobby.start_intake(120)\nwhile brain_inertial.heading() < 30:\n    bobby.turnRINF()\nbobby.stop_D()\nwait(0.25,SECONDS)\nbobby.driveF(1)\nwait(0.25,SECONDS)\nwhile brain_inertial.heading() < 84:\n    bobby.turnRINF()\nbobby.stop_D()\nwait(0.25,SECONDS)\nbobby.set_drive_speed(90,90)\nbobby.driveF(1.5)\nwait(0.3,SECONDS)\nbobby.driveF(0.7)\nwait(2,SECONDS)\nbobby.shoot_ball()\nwait(0.8,SECONDS)\nbobby.start_flywheel(65)\n\nwhile True:\n    bobby.driveR(0.3)\n    wait(0.3,SECONDS)\n    bobby.driveF(0.5)\n    bobby.shoot_ball()\n    wait(0.5,SECONDS)\n\n'''\nwhile not optical_9.is_near_object():\n    pass\nbobby.stop_intake()\n# original 2.5\nbobby.driveF(1.7)\n\n# original 0.9\nbobby.driveF(0.45)\n\n\nbobby.shoot_ball()\n\nbobby.start_intake(120)\n# original 0.2\n#bobby.driveR(0.2)\n\n# original 0.6\n#wait(0.6,SECONDS)\n#bobby.stop_D()\n#SECOND SHOT OF ENTIRE RUN\n#bobby.set_flywheel_speed(65)\nwait(1,SECONDS)\nbobby.stop_intake()\nbobby.shoot_ball()\n\nwait(0.5,SECONDS)\n# original 0.2\nbobby.driveR(0.1)\n# original 0.6\nbobby.driveF(0.3)\n# original 2.7\nbobby.driveR(1.35)\nbobby.set_flywheel_speed(65)\nbobby.start_intake(120)\nwhile not optical_9.is_near_object():\n    pass\nwait(0.5,SECONDS)\nwhile not optical_9.is_near_object():\n    pass\nbobby.stop_intake()\n# original 3.0\nbobby.driveF(1.5)\n\nwait(0.5,SECONDS)\n# original 0.5\nbobby.driveF(0.25)\nbobby.shoot_ball()\nbobby.start_intake(120)\n# original 0.2\nbobby.driveR(0.1)\n\n# original 0.6\nwait(0.6,SECONDS)\nbobby.stop_D()\n#bobby.set_flywheel_speed(65)\nwait(1,SECONDS)\nbobby.stop_intake()\nbobby.shoot_ball()\nbrain.play_sound(SoundType.ALARM)\n# original 0.2\nbobby.driveR(0.1)\n\nwait(0.3,SECONDS)\n# original 0.4\nbobby.driveF(0.2)\nbobby.stop_D()\n\nbobby.stop_D()\n\n\n\n# original 0.5\nbobby.driveR(0.25)\n# original 0.25\nbobby.turnR(0.125)\n# original 2.6\nbobby.driveR(1.3)\n# original 0.35\nbobby.turnL(0.175)\n\n\n\ntouchled_10.set_color(Color.BLUE)\n#RIGHTAFTERTURNING\n#110 BEFORE\nbobby.start_flywheel(95)\nbobby.start_intake(120)\nbobby.set_drive_speed(100,100)\n\nwhile not optical_9.is_near_object():\n    pass\nwait(0.5,SECONDS)\nwhile not optical_9.is_near_object():\n    pass\nbobby.stop_intake()\n# original 3\nbobby.driveF(1.5)\n# original 0.3\nbobby.driveR(0.15)\n\n\nwait(0.8,SECONDS)\n# original 0.5\nbobby.driveF(0.25)\n\n\nbobby.shoot_ball()\nbobby.start_intake(120)\n#bobby.set_flywheel_speed(65)\nwait(1,SECONDS)\nbobby.stop_intake()\n#09e5098509834509438209882946048473982640896483064967432469839670984367093847693867249807463\nbobby.shoot_ball()\nwait(0.5,SECONDS)\n# original 0.2\nbobby.driveR(0.1)\n# original 0.6\nbobby.driveF(0.3)\n# original 0.2\nbobby.driveR(0.1)\n# original 0.6\nbobby.driveF(0.3)\n# original 1.6\nbobby.driveR(1.3)\nbobby.start_intake(120)\nwhile not optical_9.is_near_object():\n    pass\nwait(0.5,SECONDS)\nwhile not optical_9.is_near_object():\n    pass\nbobby.stop_intake()\n# original 2.1\nbobby.driveF(1.05)\n\n\n\nwait(0.5,SECONDS)\n# original 0.5\nbobby.driveF(0.25)\n\n\nbobby.shoot_ball()\nbobby.start_intake(120)\n#below was 65\nbobby.set_flywheel_speed(65)\nwait(1,SECONDS)\nbobby.stop_intake()\nbobby.shoot_ball()\nwait(0.5,SECONDS)\n# original 0.2\nbobby.driveR(0.1)\n# original 0.6\nbobby.driveF(0.3)\n# original 1.8\nbobby.driveR(0.9)\n\nbobby.start_intake(120)\nwhile not optical_9.is_near_object():\n    pass\nwait(0.5,SECONDS)\nwhile not optical_9.is_near_object():\n    pass\nbobby.stop_intake()\n# original 1.9\nbobby.driveF(0.95)\nbobby.set_flywheel_speed(65)\nbobby.set_drive_speed(100,100)\nwhile True:\n\n\n    wait(0.5,SECONDS)\n    # original 0.5\n    bobby.driveF(0.25)\n    bobby.shoot_ball()\n    bobby.start_intake(120)\n    #bobby.set_flywheel_speed(65)\n    wait(1,SECONDS)\n    bobby.stop_intake()\n    bobby.shoot_ball()\n    wait(0.5,SECONDS)\n    # original 0.2\n    bobby.driveR(0.1)\n    # original 0.6\n    bobby.driveF(0.3)\n    # original 1.8\n    bobby.driveR(0.9)\n    \n    bobby.start_intake(120)\n    while not optical_9.is_near_object():\n        pass\n    wait(0.5,SECONDS)\n    while not optical_9.is_near_object():\n        pass\n    bobby.stop_intake()\n    # original 1.9\n    bobby.driveF(0.9)\n    \n'''","textLanguage":"python","robotConfig":[{"port":[1],"name":"rightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"leftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"strafeMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[2],"name":"leftFly","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"rightFly","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[8],"name":"rollers","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"pneumatic_7","customName":false,"deviceType":"Pneumatic","deviceClass":"pneumatic","setting":{"cylinder1":"cylinder1","cylinder2":"cylinder2","cylinder1_reversed":"false","cylinder2_reversed":"false","cylinder3":"","cylinder4":""},"triportSourcePort":22},{"port":[9],"name":"optical_9","customName":false,"deviceType":"Optical","deviceClass":"optical","setting":{},"triportSourcePort":22},{"port":[10],"name":"touchled_10","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[11],"name":"distance_11","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[12],"name":"distance_12","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22}],"slot":5,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false}